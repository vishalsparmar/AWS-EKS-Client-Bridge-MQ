sed -i 's/\r$//' your-script.sh
Here are the essential kubectl commands to check pod distribution across Availability Zones:

1. Basic AZ Distribution Count

bash
# Show pod count per AZ for ALL namespaces
kubectl get pods -A -o wide | awk 'NR>1{print $8}' | sort | uniq -c | while read count node; do
  az=$(kubectl get node $node -o jsonpath='{.metadata.labels.topology\.kubernetes\.io/zone}' 2>/dev/null)
  echo "AZ: $az, Node: $node, Pods: $count"
done
2. One-liner for Quick Overview

bash
# Simple pod count per AZ
kubectl get pods -A -o json | jq -r '.items[] | select(.spec.nodeName != null) | .spec.nodeName' | \
  sort | uniq -c | while read count node; do
    az=$(kubectl get node $node -o jsonpath='{.metadata.labels.topology\.kubernetes\.io/zone}')
    echo "AZ: $az - Pods: $count"
  done | sort
3. Detailed AZ Distribution with Pod Names

bash
# Show pods grouped by AZ with names
kubectl get pods -A -o json | jq -r '.items[] | select(.spec.nodeName != null) | "\(.metadata.namespace) \(.metadata.name) \(.spec.nodeName)"' | \
  while read ns pod node; do
    az=$(kubectl get node $node -o jsonpath='{.metadata.labels.topology\.kubernetes\.io/zone}')
    echo "AZ: $az | NS: $ns | Pod: $pod"
  done | sort
4. AZ Distribution Summary

bash
# Summary count per AZ
echo "=== POD DISTRIBUTION ACROSS AZs ==="
kubectl get pods -A -o json | \
  jq -r '.items[] | select(.spec.nodeName != null) | .spec.nodeName' | \
  while read node; do
    kubectl get node $node -o jsonpath='{.metadata.labels.topology\.kubernetes\.io/zone}'
    echo
  done | sort | uniq -c | sort -nr
5. For Specific Namespace

bash
# Check specific namespace
NAMESPACE="default"
echo "=== Pod distribution in namespace: $NAMESPACE ==="
kubectl get pods -n $NAMESPACE -o json | \
  jq -r '.items[] | select(.spec.nodeName != null) | .spec.nodeName' | \
  while read node; do
    kubectl get node $node -o jsonpath='{.metadata.labels.topology\.kubernetes\.io/zone}'
    echo
  done | sort | uniq -c
6. For Specific App/Deployment

bash
# Check pods with specific label
LABEL="app=my-app"
echo "=== Pod distribution for $LABEL ==="
kubectl get pods -l $LABEL -A -o json | \
  jq -r '.items[] | select(.spec.nodeName != null) | .spec.nodeName' | \
  while read node; do
    kubectl get node $node -o jsonpath='{.metadata.labels.topology\.kubernetes\.io/zone}'
    echo
  done | sort | uniq -c
7. With Percentage Distribution

bash
# Show percentage distribution
TOTAL_PODS=$(kubectl get pods -A --no-headers | wc -l)
echo "Total Pods: $TOTAL_PODS"
echo "=== Distribution ==="

kubectl get pods -A -o json | \
  jq -r '.items[] | select(.spec.nodeName != null) | .spec.nodeName' | \
  while read node; do
    kubectl get node $node -o jsonpath='{.metadata.labels.topology\.kubernetes\.io/zone}'
    echo
  done | sort | uniq -c | while read count az; do
    percentage=$(echo "scale=2; $count * 100 / $TOTAL_PODS" | bc)
    echo "AZ: $az - Pods: $count ($percentage%)"
  done
8. Real-time Watch Distribution

bash
# Watch pod distribution changes
watch -n 5 '
  echo "=== Current AZ Distribution ==="
  kubectl get pods -A -o json | \
    jq -r ".items[] | select(.spec.nodeName != null) | .spec.nodeName" | \
    while read node; do
      kubectl get node $node -o jsonpath="{.metadata.labels.topology\.kubernetes\.io/zone}"
      echo
    done | sort | uniq -c
'
9. Complete Distribution Report

bash
#!/bin/bash
echo "========================================="
echo "    CLUSTER AZ DISTRIBUTION REPORT"
echo "========================================="

# Total pods
TOTAL_PODS=$(kubectl get pods -A --no-headers | wc -l)
echo "Total Pods in Cluster: $TOTAL_PODS"
echo ""

# AZ distribution
echo "--- Availability Zone Distribution ---"
kubectl get pods -A -o json | \
  jq -r '.items[] | select(.spec.nodeName != null) | .spec.nodeName' | \
  while read node; do
    kubectl get node $node -o jsonpath='{.metadata.labels.topology\.kubernetes\.io/zone}'
    echo
  done | sort | uniq -c | sort -k2 | while read count az; do
    percentage=$(echo "scale=1; $count * 100 / $TOTAL_PODS" | bc)
    echo "  $az: $count pods (${percentage}%)"
  done

# Node distribution
echo ""
echo "--- Node Distribution ---"
kubectl get nodes -o json | \
  jq -r '.items[] | "\(.metadata.name) \(.metadata.labels.topology\.kubernetes\.io/zone)"' | \
  sort -k2 | while read node az; do
    pod_count=$(kubectl get pods -A --field-selector spec.nodeName=$node --no-headers | wc -l)
    echo "  $az - $node: $pod_count pods"
  done
10. Most Practical One-liner

bash
# Quick and clean AZ distribution
kubectl get pods -A -o json | \
  jq -r '.items[] | select(.spec.nodeName != null) | .spec.nodeName' | \
  xargs -I {} kubectl get node {} -o jsonpath='{.metadata.labels.topology\.kubernetes\.io/zone}' | \
  sort | uniq -c
Save as Script for Reuse:

bash
# Save as check-az-distribution.sh
#!/bin/bash
kubectl get pods -A -o json | \
  jq -r '.items[] | select(.spec.nodeName != null) | .spec.nodeName' | \
  while read node; do
    kubectl get node $node -o jsonpath='{.metadata.labels.topology\.kubernetes\.io/zone}'
  done | sort | uniq -c | sort -k2
Usage:

bash
chmod +x check-az-distribution.sh
./check-az-distribution.sh
Sample Output:

text
  15 eu-west-2a
  14 eu-west-2b  
  16 eu-west-2c
This shows you have 15 pods in eu-west-2a, 14 in eu-west-2b, and 16 in eu-west-2c - nicely balanced!

